

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by CodeZu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

var Client = require('../../../../client'), constants = Client.constants;

module.exports = Client.sub({
	getSearchTuningRule: Client.method({
		method: constants.verbs.GET,
		url: '{+tenantPod}api/commerce/catalog/admin/search/searchtuningrules/{searchTuningRuleCode}?responseFields={responseFields}'
	}),
	getSearchTuningRules: Client.method({
		method: constants.verbs.GET,
		url: '{+tenantPod}api/commerce/catalog/admin/search/searchtuningrules?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&filter={filter}&responseFields={responseFields}'
	}),
	getSearchTuningRuleSortFields: Client.method({
		method: constants.verbs.GET,
		url: '{+tenantPod}api/commerce/catalog/admin/search/searchtuningrulesortfields?responseFields={responseFields}'
	}),
	getSettings: Client.method({
		method: constants.verbs.GET,
		url: '{+tenantPod}api/commerce/catalog/admin/search/settings?responseFields={responseFields}'
	}),
	getSynonymDefinitionCollection: Client.method({
		method: constants.verbs.GET,
		url: '{+tenantPod}api/commerce/catalog/admin/search/synonym-definitions/{localeCode}?responseFields={responseFields}'
	}),
	getSynonymDefinitions: Client.method({
		method: constants.verbs.GET,
		url: '{+tenantPod}api/commerce/catalog/admin/search/synonyms/?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&filter={filter}&responseFields={responseFields}'
	}),
	getSynonymDefinition: Client.method({
		method: constants.verbs.GET,
		url: '{+tenantPod}api/commerce/catalog/admin/search/synonyms/{synonymId}?responseFields={responseFields}'
	}),
	addSearchTuningRule: Client.method({
		method: constants.verbs.POST,
		url: '{+tenantPod}api/commerce/catalog/admin/search/searchtuningrules?responseFields={responseFields}'
	}),
	updateSearchTuningRuleSortFields: Client.method({
		method: constants.verbs.POST,
		url: '{+tenantPod}api/commerce/catalog/admin/search/searchtuningrulesortfields?responseFields={responseFields}'
	}),
	updateSynonymDefinitionCollection: Client.method({
		method: constants.verbs.POST,
		url: '{+tenantPod}api/commerce/catalog/admin/search/synonym-definitions/{localeCode}?responseFields={responseFields}'
	}),
	addSynonymDefinition: Client.method({
		method: constants.verbs.POST,
		url: '{+tenantPod}api/commerce/catalog/admin/search/synonyms?responseFields={responseFields}'
	}),
	updateSearchTuningRule: Client.method({
		method: constants.verbs.PUT,
		url: '{+tenantPod}api/commerce/catalog/admin/search/searchtuningrules/{searchTuningRuleCode}?responseFields={responseFields}'
	}),
	updateSettings: Client.method({
		method: constants.verbs.PUT,
		url: '{+tenantPod}api/commerce/catalog/admin/search/settings?responseFields={responseFields}'
	}),
	updateSynonymDefinition: Client.method({
		method: constants.verbs.PUT,
		url: '{+tenantPod}api/commerce/catalog/admin/search/synonyms/{synonymId}?responseFields={responseFields}'
	}),
	deleteSearchTuningRule: Client.method({
		method: constants.verbs.DELETE,
		url: '{+tenantPod}api/commerce/catalog/admin/search/searchtuningrules/{searchTuningRuleCode}'
	}),
	deleteSynonymDefinition: Client.method({
		method: constants.verbs.DELETE,
		url: '{+tenantPod}api/commerce/catalog/admin/search/synonyms/{synonymId}'
	})
});
